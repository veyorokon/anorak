// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataTable selection -- radio buttons should not have select-all checkbox 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  radio={true}
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "radio": true,
            "rows": Array [],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <TableContainer
            title="DataTable with selection"
          >
            <Table
              short={false}
              shouldShowBorder={true}
              zebra={true}
            >
              <TableHead>
                <TableRow>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field A
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field B
                  </TableHeader>
                </TableRow>
              </TableHead>
              <TableBody />
            </Table>
          </TableContainer>,
        },
      ],
    }
  }
  rows={Array []}
  short={false}
  shouldShowBorder={true}
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with selection"
  >
    <div
      className="bx--data-table-container"
    >
      <div
        className="bx--data-table-header"
      >
        <h4
          className="bx--data-table-header__title"
        >
          DataTable with selection
        </h4>
        <p
          className="bx--data-table-header__description"
        />
      </div>
      <Table
        short={false}
        shouldShowBorder={true}
        zebra={true}
      >
        <table
          className="bx--data-table bx--data-table--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody />
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;

exports[`DataTable selection -- radio buttons should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  radio={true}
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "radio": true,
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <TableContainer
            title="DataTable with selection"
          >
            <Table
              short={false}
              shouldShowBorder={true}
              zebra={true}
            >
              <TableHead>
                <TableRow>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field A
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field B
                  </TableHeader>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-b"
                    name="select-row-b"
                    onSelect={[Function]}
                    radio={true}
                  />
                  <TableCell>
                    Field 2:A
                  </TableCell>
                  <TableCell>
                    Field 2:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-a"
                    name="select-row-a"
                    onSelect={[Function]}
                    radio={true}
                  />
                  <TableCell>
                    Field 1:A
                  </TableCell>
                  <TableCell>
                    Field 1:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-c"
                    name="select-row-c"
                    onSelect={[Function]}
                    radio={true}
                  />
                  <TableCell>
                    Field 3:A
                  </TableCell>
                  <TableCell>
                    Field 3:B
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </TableContainer>,
        },
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  short={false}
  shouldShowBorder={true}
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with selection"
  >
    <div
      className="bx--data-table-container"
    >
      <div
        className="bx--data-table-header"
      >
        <h4
          className="bx--data-table-header__title"
        >
          DataTable with selection
        </h4>
        <p
          className="bx--data-table-header__description"
        />
      </div>
      <Table
        short={false}
        shouldShowBorder={true}
        zebra={true}
      >
        <table
          className="bx--data-table bx--data-table--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody>
              <TableRow
                key="b"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-b"
                    name="select-row-b"
                    onSelect={[Function]}
                    radio={true}
                  >
                    <td>
                      <ForwardRef(RadioButton)
                        checked={false}
                        hideLabel={true}
                        id="data-table-11__select-row-b"
                        labelText="Select row"
                        name="select-row-b"
                        onClick={[Function]}
                      >
                        <RadioButton
                          checked={false}
                          hideLabel={true}
                          id="data-table-11__select-row-b"
                          innerRef={null}
                          labelPosition="right"
                          labelText="Select row"
                          name="select-row-b"
                          onChange={[Function]}
                          onClick={[Function]}
                          value=""
                        >
                          <div
                            className="bx--radio-button-wrapper"
                          >
                            <input
                              checked={false}
                              className="bx--radio-button"
                              id="data-table-11__select-row-b"
                              name="select-row-b"
                              onChange={[Function]}
                              onClick={[Function]}
                              type="radio"
                              value=""
                            />
                            <label
                              aria-label="Select row"
                              className="bx--radio-button__label"
                              htmlFor="data-table-11__select-row-b"
                            >
                              <span
                                className="bx--radio-button__appearance"
                              />
                              <span
                                className="bx--visually-hidden"
                              >
                                Select row
                              </span>
                            </label>
                          </div>
                        </RadioButton>
                      </ForwardRef(RadioButton)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="b:fieldA"
                  >
                    <td>
                      Field 2:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="b:fieldB"
                  >
                    <td>
                      Field 2:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="a"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-a"
                    name="select-row-a"
                    onSelect={[Function]}
                    radio={true}
                  >
                    <td>
                      <ForwardRef(RadioButton)
                        checked={false}
                        hideLabel={true}
                        id="data-table-11__select-row-a"
                        labelText="Select row"
                        name="select-row-a"
                        onClick={[Function]}
                      >
                        <RadioButton
                          checked={false}
                          hideLabel={true}
                          id="data-table-11__select-row-a"
                          innerRef={null}
                          labelPosition="right"
                          labelText="Select row"
                          name="select-row-a"
                          onChange={[Function]}
                          onClick={[Function]}
                          value=""
                        >
                          <div
                            className="bx--radio-button-wrapper"
                          >
                            <input
                              checked={false}
                              className="bx--radio-button"
                              id="data-table-11__select-row-a"
                              name="select-row-a"
                              onChange={[Function]}
                              onClick={[Function]}
                              type="radio"
                              value=""
                            />
                            <label
                              aria-label="Select row"
                              className="bx--radio-button__label"
                              htmlFor="data-table-11__select-row-a"
                            >
                              <span
                                className="bx--radio-button__appearance"
                              />
                              <span
                                className="bx--visually-hidden"
                              >
                                Select row
                              </span>
                            </label>
                          </div>
                        </RadioButton>
                      </ForwardRef(RadioButton)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="a:fieldA"
                  >
                    <td>
                      Field 1:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="a:fieldB"
                  >
                    <td>
                      Field 1:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="c"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-11__select-row-c"
                    name="select-row-c"
                    onSelect={[Function]}
                    radio={true}
                  >
                    <td>
                      <ForwardRef(RadioButton)
                        checked={false}
                        hideLabel={true}
                        id="data-table-11__select-row-c"
                        labelText="Select row"
                        name="select-row-c"
                        onClick={[Function]}
                      >
                        <RadioButton
                          checked={false}
                          hideLabel={true}
                          id="data-table-11__select-row-c"
                          innerRef={null}
                          labelPosition="right"
                          labelText="Select row"
                          name="select-row-c"
                          onChange={[Function]}
                          onClick={[Function]}
                          value=""
                        >
                          <div
                            className="bx--radio-button-wrapper"
                          >
                            <input
                              checked={false}
                              className="bx--radio-button"
                              id="data-table-11__select-row-c"
                              name="select-row-c"
                              onChange={[Function]}
                              onClick={[Function]}
                              type="radio"
                              value=""
                            />
                            <label
                              aria-label="Select row"
                              className="bx--radio-button__label"
                              htmlFor="data-table-11__select-row-c"
                            >
                              <span
                                className="bx--radio-button__appearance"
                              />
                              <span
                                className="bx--visually-hidden"
                              >
                                Select row
                              </span>
                            </label>
                          </div>
                        </RadioButton>
                      </ForwardRef(RadioButton)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="c:fieldA"
                  >
                    <td>
                      Field 3:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="c:fieldB"
                  >
                    <td>
                      Field 3:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;

exports[`DataTable selection should have select-all default to un-checked if no rows are present 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "radio": undefined,
            "rows": Array [],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <TableContainer
            title="DataTable with selection"
          >
            <Table
              short={false}
              shouldShowBorder={true}
              zebra={true}
            >
              <TableHead>
                <TableRow>
                  <TableSelectAll
                    ariaLabel="Select all rows"
                    checked={false}
                    id="data-table-7__select-all"
                    indeterminate={false}
                    name="select-all"
                    onSelect={[Function]}
                  />
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field A
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field B
                  </TableHeader>
                </TableRow>
              </TableHead>
              <TableBody />
            </Table>
          </TableContainer>,
        },
      ],
    }
  }
  rows={Array []}
  short={false}
  shouldShowBorder={true}
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with selection"
  >
    <div
      className="bx--data-table-container"
    >
      <div
        className="bx--data-table-header"
      >
        <h4
          className="bx--data-table-header__title"
        >
          DataTable with selection
        </h4>
        <p
          className="bx--data-table-header__description"
        />
      </div>
      <Table
        short={false}
        shouldShowBorder={true}
        zebra={true}
      >
        <table
          className="bx--data-table bx--data-table--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableSelectAll
                    ariaLabel="Select all rows"
                    checked={false}
                    id="data-table-7__select-all"
                    indeterminate={false}
                    name="select-all"
                    onSelect={[Function]}
                  >
                    <th
                      className="bx--table-column-checkbox"
                      scope="col"
                    >
                      <ForwardRef(InlineCheckbox)
                        ariaLabel="Select all rows"
                        checked={false}
                        id="data-table-7__select-all"
                        indeterminate={false}
                        name="select-all"
                        onClick={[Function]}
                      >
                        <InlineCheckbox
                          ariaLabel="Select all rows"
                          checked={false}
                          id="data-table-7__select-all"
                          indeterminate={false}
                          innerRef={null}
                          name="select-all"
                          onChange={[Function]}
                          onClick={[Function]}
                        >
                          <input
                            checked={false}
                            className="bx--checkbox"
                            id="data-table-7__select-all"
                            name="select-all"
                            onChange={[Function]}
                            onClick={[Function]}
                            type="checkbox"
                          />
                          <label
                            aria-label="Select all rows"
                            className="bx--checkbox-label"
                            htmlFor="data-table-7__select-all"
                          />
                        </InlineCheckbox>
                      </ForwardRef(InlineCheckbox)>
                    </th>
                  </TableSelectAll>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody />
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;

exports[`DataTable selection should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "radio": undefined,
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <TableContainer
            title="DataTable with selection"
          >
            <Table
              short={false}
              shouldShowBorder={true}
              zebra={true}
            >
              <TableHead>
                <TableRow>
                  <TableSelectAll
                    ariaLabel="Select all rows"
                    checked={false}
                    id="data-table-6__select-all"
                    indeterminate={false}
                    name="select-all"
                    onSelect={[Function]}
                  />
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field A
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field B
                  </TableHeader>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-b"
                    name="select-row-b"
                    onSelect={[Function]}
                    radio={null}
                  />
                  <TableCell>
                    Field 2:A
                  </TableCell>
                  <TableCell>
                    Field 2:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-a"
                    name="select-row-a"
                    onSelect={[Function]}
                    radio={null}
                  />
                  <TableCell>
                    Field 1:A
                  </TableCell>
                  <TableCell>
                    Field 1:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-c"
                    name="select-row-c"
                    onSelect={[Function]}
                    radio={null}
                  />
                  <TableCell>
                    Field 3:A
                  </TableCell>
                  <TableCell>
                    Field 3:B
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </TableContainer>,
        },
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  short={false}
  shouldShowBorder={true}
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with selection"
  >
    <div
      className="bx--data-table-container"
    >
      <div
        className="bx--data-table-header"
      >
        <h4
          className="bx--data-table-header__title"
        >
          DataTable with selection
        </h4>
        <p
          className="bx--data-table-header__description"
        />
      </div>
      <Table
        short={false}
        shouldShowBorder={true}
        zebra={true}
      >
        <table
          className="bx--data-table bx--data-table--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableSelectAll
                    ariaLabel="Select all rows"
                    checked={false}
                    id="data-table-6__select-all"
                    indeterminate={false}
                    name="select-all"
                    onSelect={[Function]}
                  >
                    <th
                      className="bx--table-column-checkbox"
                      scope="col"
                    >
                      <ForwardRef(InlineCheckbox)
                        ariaLabel="Select all rows"
                        checked={false}
                        id="data-table-6__select-all"
                        indeterminate={false}
                        name="select-all"
                        onClick={[Function]}
                      >
                        <InlineCheckbox
                          ariaLabel="Select all rows"
                          checked={false}
                          id="data-table-6__select-all"
                          indeterminate={false}
                          innerRef={null}
                          name="select-all"
                          onChange={[Function]}
                          onClick={[Function]}
                        >
                          <input
                            checked={false}
                            className="bx--checkbox"
                            id="data-table-6__select-all"
                            name="select-all"
                            onChange={[Function]}
                            onClick={[Function]}
                            type="checkbox"
                          />
                          <label
                            aria-label="Select all rows"
                            className="bx--checkbox-label"
                            htmlFor="data-table-6__select-all"
                          />
                        </InlineCheckbox>
                      </ForwardRef(InlineCheckbox)>
                    </th>
                  </TableSelectAll>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody>
              <TableRow
                key="b"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-b"
                    name="select-row-b"
                    onSelect={[Function]}
                    radio={null}
                  >
                    <td>
                      <ForwardRef(InlineCheckbox)
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-6__select-row-b"
                        name="select-row-b"
                        onClick={[Function]}
                      >
                        <InlineCheckbox
                          ariaLabel="Select row"
                          checked={false}
                          id="data-table-6__select-row-b"
                          innerRef={null}
                          name="select-row-b"
                          onChange={[Function]}
                          onClick={[Function]}
                        >
                          <input
                            checked={false}
                            className="bx--checkbox"
                            id="data-table-6__select-row-b"
                            name="select-row-b"
                            onChange={[Function]}
                            onClick={[Function]}
                            type="checkbox"
                          />
                          <label
                            aria-label="Select row"
                            className="bx--checkbox-label"
                            htmlFor="data-table-6__select-row-b"
                          />
                        </InlineCheckbox>
                      </ForwardRef(InlineCheckbox)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="b:fieldA"
                  >
                    <td>
                      Field 2:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="b:fieldB"
                  >
                    <td>
                      Field 2:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="a"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-a"
                    name="select-row-a"
                    onSelect={[Function]}
                    radio={null}
                  >
                    <td>
                      <ForwardRef(InlineCheckbox)
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-6__select-row-a"
                        name="select-row-a"
                        onClick={[Function]}
                      >
                        <InlineCheckbox
                          ariaLabel="Select row"
                          checked={false}
                          id="data-table-6__select-row-a"
                          innerRef={null}
                          name="select-row-a"
                          onChange={[Function]}
                          onClick={[Function]}
                        >
                          <input
                            checked={false}
                            className="bx--checkbox"
                            id="data-table-6__select-row-a"
                            name="select-row-a"
                            onChange={[Function]}
                            onClick={[Function]}
                            type="checkbox"
                          />
                          <label
                            aria-label="Select row"
                            className="bx--checkbox-label"
                            htmlFor="data-table-6__select-row-a"
                          />
                        </InlineCheckbox>
                      </ForwardRef(InlineCheckbox)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="a:fieldA"
                  >
                    <td>
                      Field 1:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="a:fieldB"
                  >
                    <td>
                      Field 1:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="c"
              >
                <tr>
                  <TableSelectRow
                    ariaLabel="Select row"
                    checked={false}
                    id="data-table-6__select-row-c"
                    name="select-row-c"
                    onSelect={[Function]}
                    radio={null}
                  >
                    <td>
                      <ForwardRef(InlineCheckbox)
                        ariaLabel="Select row"
                        checked={false}
                        id="data-table-6__select-row-c"
                        name="select-row-c"
                        onClick={[Function]}
                      >
                        <InlineCheckbox
                          ariaLabel="Select row"
                          checked={false}
                          id="data-table-6__select-row-c"
                          innerRef={null}
                          name="select-row-c"
                          onChange={[Function]}
                          onClick={[Function]}
                        >
                          <input
                            checked={false}
                            className="bx--checkbox"
                            id="data-table-6__select-row-c"
                            name="select-row-c"
                            onChange={[Function]}
                            onClick={[Function]}
                            type="checkbox"
                          />
                          <label
                            aria-label="Select row"
                            className="bx--checkbox-label"
                            htmlFor="data-table-6__select-row-c"
                          />
                        </InlineCheckbox>
                      </ForwardRef(InlineCheckbox)>
                    </td>
                  </TableSelectRow>
                  <TableCell
                    key="c:fieldA"
                  >
                    <td>
                      Field 3:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="c:fieldB"
                  >
                    <td>
                      Field 3:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;

exports[`DataTable should render 1`] = `
<DataTable
  filterRows={[Function]}
  headers={
    Array [
      Object {
        "header": "Field A",
        "key": "fieldA",
      },
      Object {
        "header": "Field B",
        "key": "fieldB",
      },
    ]
  }
  locale="en"
  render={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "expandRow": [Function],
            "getBatchActionProps": [Function],
            "getHeaderProps": [Function],
            "getRowProps": [Function],
            "getSelectionProps": [Function],
            "getTableProps": [Function],
            "headers": Array [
              Object {
                "header": "Field A",
                "key": "fieldA",
              },
              Object {
                "header": "Field B",
                "key": "fieldB",
              },
            ],
            "onInputChange": [Function],
            "radio": undefined,
            "rows": Array [
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "b:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:A",
                  },
                  Object {
                    "errors": null,
                    "id": "b:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 2:B",
                  },
                ],
                "id": "b",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "a:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:A",
                  },
                  Object {
                    "errors": null,
                    "id": "a:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 1:B",
                  },
                ],
                "id": "a",
                "isExpanded": false,
                "isSelected": false,
              },
              Object {
                "cells": Array [
                  Object {
                    "errors": null,
                    "id": "c:fieldA",
                    "info": Object {
                      "header": "fieldA",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:A",
                  },
                  Object {
                    "errors": null,
                    "id": "c:fieldB",
                    "info": Object {
                      "header": "fieldB",
                    },
                    "isEditable": false,
                    "isEditing": false,
                    "isValid": true,
                    "value": "Field 3:B",
                  },
                ],
                "id": "c",
                "isExpanded": false,
                "isSelected": false,
              },
            ],
            "selectAll": [Function],
            "selectRow": [Function],
            "selectedRows": Array [],
            "sortBy": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <TableContainer
            title="DataTable with toolbar"
          >
            <TableToolbar>
              <TableToolbarSearch
                id="custom-id"
                onChange={[Function]}
                translateWithId={[Function]}
              />
              <TableToolbarContent>
                <TableToolbarAction
                  iconDescription="Download"
                  onClick={[MockFunction]}
                  renderIcon={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "height": 16,
                        "preserveAspectRatio": "xMidYMid meet",
                        "viewBox": "0 0 16 16",
                        "width": 16,
                        "xmlns": "http://www.w3.org/2000/svg",
                      },
                      "displayName": "Download16",
                      "propTypes": Object {
                        "aria-hidden": [Function],
                        "aria-label": [Function],
                        "aria-labelledby": [Function],
                        "children": [Function],
                        "className": [Function],
                        "height": [Function],
                        "preserveAspectRatio": [Function],
                        "tabIndex": [Function],
                        "viewBox": [Function],
                        "width": [Function],
                        "xmlns": [Function],
                      },
                      "render": [Function],
                    }
                  }
                />
                <TableToolbarAction
                  iconDescription="Edit"
                  onClick={[MockFunction]}
                  renderIcon={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "height": 16,
                        "preserveAspectRatio": "xMidYMid meet",
                        "viewBox": "0 0 16 16",
                        "width": 16,
                        "xmlns": "http://www.w3.org/2000/svg",
                      },
                      "displayName": "Edit16",
                      "propTypes": Object {
                        "aria-hidden": [Function],
                        "aria-label": [Function],
                        "aria-labelledby": [Function],
                        "children": [Function],
                        "className": [Function],
                        "height": [Function],
                        "preserveAspectRatio": [Function],
                        "tabIndex": [Function],
                        "viewBox": [Function],
                        "width": [Function],
                        "xmlns": [Function],
                      },
                      "render": [Function],
                    }
                  }
                />
                <TableToolbarAction
                  iconDescription="Settings"
                  onClick={[MockFunction]}
                  renderIcon={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "height": 16,
                        "preserveAspectRatio": "xMidYMid meet",
                        "viewBox": "0 0 16 16",
                        "width": 16,
                        "xmlns": "http://www.w3.org/2000/svg",
                      },
                      "displayName": "Settings16",
                      "propTypes": Object {
                        "aria-hidden": [Function],
                        "aria-label": [Function],
                        "aria-labelledby": [Function],
                        "children": [Function],
                        "className": [Function],
                        "height": [Function],
                        "preserveAspectRatio": [Function],
                        "tabIndex": [Function],
                        "viewBox": [Function],
                        "width": [Function],
                        "xmlns": [Function],
                      },
                      "render": [Function],
                    }
                  }
                />
                <ForwardRef
                  disabled={false}
                  iconDescription="Provide icon description if icon is used"
                  kind="primary"
                  onClick={[MockFunction]}
                  small={true}
                  tabIndex={0}
                  type="button"
                >
                  Add new
                </ForwardRef>
              </TableToolbarContent>
            </TableToolbar>
            <Table
              short={false}
              shouldShowBorder={true}
              zebra={true}
            >
              <TableHead>
                <TableRow>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field A
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    Field B
                  </TableHeader>
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>
                    Field 2:A
                  </TableCell>
                  <TableCell>
                    Field 2:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Field 1:A
                  </TableCell>
                  <TableCell>
                    Field 1:B
                  </TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>
                    Field 3:A
                  </TableCell>
                  <TableCell>
                    Field 3:B
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </TableContainer>,
        },
      ],
    }
  }
  rows={
    Array [
      Object {
        "fieldA": "Field 2:A",
        "fieldB": "Field 2:B",
        "id": "b",
      },
      Object {
        "fieldA": "Field 1:A",
        "fieldB": "Field 1:B",
        "id": "a",
      },
      Object {
        "fieldA": "Field 3:A",
        "fieldB": "Field 3:B",
        "id": "c",
      },
    ]
  }
  short={false}
  shouldShowBorder={true}
  sortRow={[Function]}
  translateWithId={[Function]}
>
  <TableContainer
    title="DataTable with toolbar"
  >
    <div
      className="bx--data-table-container"
    >
      <div
        className="bx--data-table-header"
      >
        <h4
          className="bx--data-table-header__title"
        >
          DataTable with toolbar
        </h4>
        <p
          className="bx--data-table-header__description"
        />
      </div>
      <TableToolbar>
        <section
          className="bx--table-toolbar"
        >
          <TableToolbarSearch
            id="custom-id"
            onChange={[Function]}
            translateWithId={[Function]}
          >
            <div
              className="bx--toolbar-search-container"
            >
              <Search
                id="custom-id"
                labelText="Filter table"
                light={true}
                onChange={[Function]}
                placeHolderText="Search"
                small={true}
                type="text"
              >
                <div
                  aria-labelledby="custom-id-label"
                  className="bx--search bx--search--sm bx--search--light"
                  role="search"
                >
                  <Search16
                    aria-label="Filter table"
                    className="bx--search-magnifier"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    role="img"
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <svg
                      aria-label="Filter table"
                      className="bx--search-magnifier"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      style={
                        Object {
                          "willChange": "transform",
                        }
                      }
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M15 14.3L10.7 10c1.9-2.3 1.6-5.8-.7-7.7S4.2.7 2.3 3 .7 8.8 3 10.7c2 1.7 5 1.7 7 0l4.3 4.3.7-.7zM2 6.5C2 4 4 2 6.5 2S11 4 11 6.5 9 11 6.5 11 2 9 2 6.5z"
                      />
                    </svg>
                  </Search16>
                  <label
                    className="bx--label"
                    htmlFor="custom-id"
                    id="custom-id-label"
                  >
                    Filter table
                  </label>
                  <input
                    className="bx--search-input"
                    id="custom-id"
                    onChange={[Function]}
                    placeholder="Search"
                    type="text"
                  />
                  <button
                    className="bx--search-close bx--search-close--hidden"
                    onClick={[Function]}
                    type="button"
                  >
                    <Close16
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <svg
                        aria-hidden={true}
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        style={
                          Object {
                            "willChange": "transform",
                          }
                        }
                        viewBox="0 0 16 16"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M12 4.7l-.7-.7L8 7.3 4.7 4l-.7.7L7.3 8 4 11.3l.7.7L8 8.7l3.3 3.3.7-.7L8.7 8z"
                        />
                      </svg>
                    </Close16>
                  </button>
                </div>
              </Search>
            </div>
          </TableToolbarSearch>
          <TableToolbarContent>
            <div
              className="bx--toolbar-content"
            >
              <TableToolbarAction
                iconDescription="Download"
                onClick={[MockFunction]}
                renderIcon={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "height": 16,
                      "preserveAspectRatio": "xMidYMid meet",
                      "viewBox": "0 0 16 16",
                      "width": 16,
                      "xmlns": "http://www.w3.org/2000/svg",
                    },
                    "displayName": "Download16",
                    "propTypes": Object {
                      "aria-hidden": [Function],
                      "aria-label": [Function],
                      "aria-labelledby": [Function],
                      "children": [Function],
                      "className": [Function],
                      "height": [Function],
                      "preserveAspectRatio": [Function],
                      "tabIndex": [Function],
                      "viewBox": [Function],
                      "width": [Function],
                      "xmlns": [Function],
                    },
                    "render": [Function],
                  }
                }
              >
                <button
                  className="bx--toolbar-action"
                  onClick={[MockFunction]}
                  title="Download"
                >
                  <Download16
                    aria-label="Download"
                    className="bx--toolbar-action__icon"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <svg
                      aria-label="Download"
                      className="bx--toolbar-action__icon"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      style={
                        Object {
                          "willChange": "transform",
                        }
                      }
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M13 7l-.7-.7-3.8 3.8V1h-1v9.1L3.7 6.3 3 7l5 5zm0 5v2H3v-2H2v2c0 .6.4 1 1 1h10c.6 0 1-.4 1-1v-2h-1z"
                      />
                    </svg>
                  </Download16>
                </button>
              </TableToolbarAction>
              <TableToolbarAction
                iconDescription="Edit"
                onClick={[MockFunction]}
                renderIcon={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "height": 16,
                      "preserveAspectRatio": "xMidYMid meet",
                      "viewBox": "0 0 16 16",
                      "width": 16,
                      "xmlns": "http://www.w3.org/2000/svg",
                    },
                    "displayName": "Edit16",
                    "propTypes": Object {
                      "aria-hidden": [Function],
                      "aria-label": [Function],
                      "aria-labelledby": [Function],
                      "children": [Function],
                      "className": [Function],
                      "height": [Function],
                      "preserveAspectRatio": [Function],
                      "tabIndex": [Function],
                      "viewBox": [Function],
                      "width": [Function],
                      "xmlns": [Function],
                    },
                    "render": [Function],
                  }
                }
              >
                <button
                  className="bx--toolbar-action"
                  onClick={[MockFunction]}
                  title="Edit"
                >
                  <Edit16
                    aria-label="Edit"
                    className="bx--toolbar-action__icon"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <svg
                      aria-label="Edit"
                      className="bx--toolbar-action__icon"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      style={
                        Object {
                          "willChange": "transform",
                        }
                      }
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M1 13h14v1H1zm11.7-8.5c.4-.4.4-1 0-1.4l-1.8-1.8c-.4-.4-1-.4-1.4 0L2 8.8V12h3.2l7.5-7.5zM10.2 2L12 3.8l-1.5 1.5-1.8-1.8L10.2 2zM3 11V9.2l5-5L9.8 6l-5 5H3z"
                      />
                    </svg>
                  </Edit16>
                </button>
              </TableToolbarAction>
              <TableToolbarAction
                iconDescription="Settings"
                onClick={[MockFunction]}
                renderIcon={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "height": 16,
                      "preserveAspectRatio": "xMidYMid meet",
                      "viewBox": "0 0 16 16",
                      "width": 16,
                      "xmlns": "http://www.w3.org/2000/svg",
                    },
                    "displayName": "Settings16",
                    "propTypes": Object {
                      "aria-hidden": [Function],
                      "aria-label": [Function],
                      "aria-labelledby": [Function],
                      "children": [Function],
                      "className": [Function],
                      "height": [Function],
                      "preserveAspectRatio": [Function],
                      "tabIndex": [Function],
                      "viewBox": [Function],
                      "width": [Function],
                      "xmlns": [Function],
                    },
                    "render": [Function],
                  }
                }
              >
                <button
                  className="bx--toolbar-action"
                  onClick={[MockFunction]}
                  title="Settings"
                >
                  <Settings16
                    aria-label="Settings"
                    className="bx--toolbar-action__icon"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <svg
                      aria-label="Settings"
                      className="bx--toolbar-action__icon"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      style={
                        Object {
                          "willChange": "transform",
                        }
                      }
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M13.5 8.4v-.8l1-.8c.4-.3.4-.9.2-1.3l-1.2-2c-.2-.3-.5-.5-.9-.5-.1 0-.2 0-.3.1l-1.2.4c-.2-.1-.4-.3-.7-.4l-.3-1.3c0-.5-.4-.8-.9-.8H6.8c-.5 0-.9.3-1 .8l-.2 1.3c-.3.1-.5.2-.7.3L3.7 3h-.3c-.4 0-.7.2-.9.5l-1.2 2c-.2.4-.1.9.3 1.3l.9.9v.8l-.9.7c-.4.3-.5.9-.2 1.3l1.2 2c.1.3.4.5.8.5.1 0 .2 0 .3-.1l1.2-.4c.2.1.4.3.7.4l.3 1.3c.1.5.5.8 1 .8h2.4c.5 0 .9-.3 1-.8l.3-1.3c.2-.1.4-.2.7-.4l1.2.4c.1 0 .2.1.3.1.4 0 .7-.2.9-.5l1.1-2c.2-.4.2-.9-.2-1.3l-1.1-.8zm-.9 3.6l-1.7-.6c-.4.3-.9.6-1.4.8L9.2 14H6.8l-.4-1.8c-.5-.2-.9-.5-1.4-.8l-1.6.6-1.2-2 1.4-1.2c-.1-.5-.1-1.1 0-1.6L2.2 6l1.2-2 1.7.6c.4-.4.9-.6 1.4-.8L6.8 2h2.4l.4 1.8c.5.2.9.5 1.4.8l1.6-.6 1.2 2-1.4 1.2c.1.5.1 1.1 0 1.6l1.4 1.2-1.2 2z"
                      />
                      <path
                        d="M8 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3c0 1.6-1.3 3-3 3zm0-5c-1.1 0-2 .8-2 1.9V8c0 1.1.8 2 1.9 2H8c1.1 0 2-.8 2-1.9V8c0-1.1-.8-2-2-2 .1 0 0 0 0 0z"
                      />
                    </svg>
                  </Settings16>
                </button>
              </TableToolbarAction>
              <ForwardRef
                disabled={false}
                iconDescription="Provide icon description if icon is used"
                kind="primary"
                onClick={[MockFunction]}
                small={true}
                tabIndex={0}
                type="button"
              >
                <button
                  className="bx--btn bx--btn--sm bx--btn--primary"
                  disabled={false}
                  onClick={[MockFunction]}
                  tabIndex={0}
                  type="button"
                >
                  Add new
                </button>
              </ForwardRef>
            </div>
          </TableToolbarContent>
        </section>
      </TableToolbar>
      <Table
        short={false}
        shouldShowBorder={true}
        zebra={true}
      >
        <table
          className="bx--data-table bx--data-table--zebra"
        >
          <TableHead>
            <thead>
              <TableRow>
                <tr>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldA"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field A
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                  <TableHeader
                    isSortHeader={false}
                    isSortable={true}
                    key="fieldB"
                    onClick={[Function]}
                    scope="col"
                    sortDirection="NONE"
                    translateWithId={[Function]}
                  >
                    <th
                      aria-sort="none"
                      scope="col"
                    >
                      <button
                        className="bx--table-sort"
                        onClick={[Function]}
                      >
                        <span
                          className="bx--table-header-label"
                        >
                          Field B
                        </span>
                        <ArrowUp20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M16 4L6 14l1.41 1.41L15 7.83V30h2V7.83l7.59 7.58L26 14 16 4z"
                            />
                          </svg>
                        </ArrowUp20>
                        <ArrowsVertical20
                          aria-label="Sort rows by this header in ascending order"
                          className="bx--table-sort__icon-unsorted"
                          height={20}
                          preserveAspectRatio="xMidYMid meet"
                          viewBox="0 0 32 32"
                          width={20}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <svg
                            aria-label="Sort rows by this header in ascending order"
                            className="bx--table-sort__icon-unsorted"
                            focusable="false"
                            height={20}
                            preserveAspectRatio="xMidYMid meet"
                            role="img"
                            style={
                              Object {
                                "willChange": "transform",
                              }
                            }
                            viewBox="0 0 32 32"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M26.59 20.59L23 24.17V4h-2v20.17l-3.59-3.58L16 22l6 6 6-6-1.41-1.41zM10 4l-6 6 1.41 1.41L9 7.83V28h2V7.83l3.59 3.58L16 10l-6-6z"
                            />
                          </svg>
                        </ArrowsVertical20>
                      </button>
                    </th>
                  </TableHeader>
                </tr>
              </TableRow>
            </thead>
          </TableHead>
          <TableBody>
            <tbody>
              <TableRow
                key="b"
              >
                <tr>
                  <TableCell
                    key="b:fieldA"
                  >
                    <td>
                      Field 2:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="b:fieldB"
                  >
                    <td>
                      Field 2:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="a"
              >
                <tr>
                  <TableCell
                    key="a:fieldA"
                  >
                    <td>
                      Field 1:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="a:fieldB"
                  >
                    <td>
                      Field 1:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
              <TableRow
                key="c"
              >
                <tr>
                  <TableCell
                    key="c:fieldA"
                  >
                    <td>
                      Field 3:A
                    </td>
                  </TableCell>
                  <TableCell
                    key="c:fieldB"
                  >
                    <td>
                      Field 3:B
                    </td>
                  </TableCell>
                </tr>
              </TableRow>
            </tbody>
          </TableBody>
        </table>
      </Table>
    </div>
  </TableContainer>
</DataTable>
`;
