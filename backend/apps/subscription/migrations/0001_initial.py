# Generated by Django 2.2 on 2019-04-19 22:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import subscription.enum


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.IntegerField(default=1555714208, editable=False)),
                ('date_modified', models.IntegerField(default=1555714208, editable=False)),
                ('live_mode', models.BooleanField(default=False, editable=False)),
                ('trashed', models.BooleanField(default=False, editable=False)),
                ('status_account', django_enumfield.db.fields.EnumField(default=20, enum=subscription.enum.SubscriptionAccountStatus)),
                ('date_canceled', models.IntegerField(blank=True, editable=False, null=True)),
                ('responsible_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Subscription_Accounts',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.IntegerField(default=1555714208, editable=False)),
                ('date_modified', models.IntegerField(default=1555714208, editable=False)),
                ('live_mode', models.BooleanField(default=False, editable=False)),
                ('trashed', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('tag_line', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('type', django_enumfield.db.fields.EnumField(default=0, enum=subscription.enum.ServiceType)),
                ('free_trial_days', models.IntegerField(default=0)),
                ('url_home', models.CharField(max_length=128, null=True)),
                ('url_signup', models.CharField(blank=True, max_length=128, null=True)),
                ('url_terms_of_service', models.CharField(max_length=128, null=True)),
                ('is_username_email', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Subscription_Services',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.IntegerField(default=1555714208, editable=False)),
                ('date_modified', models.IntegerField(default=1555714208, editable=False)),
                ('live_mode', models.BooleanField(default=False, editable=False)),
                ('trashed', models.BooleanField(default=False, editable=False)),
                ('description', models.CharField(blank=True, max_length=128)),
                ('amount', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
                ('date_canceled', models.IntegerField(blank=True, editable=False, null=True)),
                ('billing_frequency', django_enumfield.db.fields.EnumField(default=20, enum=subscription.enum.PlanBillingFrequency)),
                ('maximum_size', models.IntegerField(default=None, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_plans', to='subscription.SubscriptionService')),
            ],
            options={
                'db_table': 'Subscription_Plans',
                'ordering': ['maximum_size'],
                'unique_together': {('service', 'amount', 'maximum_size')},
            },
        ),
        migrations.CreateModel(
            name='SubscriptionInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.IntegerField(default=1555714208, editable=False)),
                ('date_modified', models.IntegerField(default=1555714208, editable=False)),
                ('live_mode', models.BooleanField(default=False, editable=False)),
                ('trashed', models.BooleanField(default=False, editable=False)),
                ('recipient_email', models.CharField(max_length=128)),
                ('processed', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invites_received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites_sent', to=settings.AUTH_USER_MODEL)),
                ('subscription_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='subscription.SubscriptionAccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='subscriptionaccount',
            name='subscription_plan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_accounts', to='subscription.SubscriptionPlan'),
        ),
        migrations.AddField(
            model_name='subscriptionaccount',
            name='subscription_service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_accounts', to='subscription.SubscriptionService'),
        ),
        migrations.CreateModel(
            name='SubscriptionMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.IntegerField(default=1555714208, editable=False)),
                ('date_modified', models.IntegerField(default=1555714208, editable=False)),
                ('live_mode', models.BooleanField(default=False, editable=False)),
                ('trashed', models.BooleanField(default=False, editable=False)),
                ('status_membership', django_enumfield.db.fields.EnumField(default=40, enum=subscription.enum.MembershipStatus)),
                ('date_canceled', models.IntegerField(blank=True, editable=False, null=True)),
                ('subscription_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='subscription.SubscriptionAccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Subscriptions',
                'unique_together': {('user', 'subscription_account')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='subscriptionaccount',
            unique_together={('responsible_user', 'subscription_service', 'subscription_plan')},
        ),
    ]
